"""Create branch table

Revision ID: d032748641ab
Revises: a6f6335fa44e
Create Date: 2025-07-01 18:44:36.378806

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd032748641ab'
down_revision: Union[str, None] = 'a6f6335fa44e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False, onupdate=sa.text('CURRENT_TIMESTAMP')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.add_column('users', sa.Column('branch_id', sa.Integer(), nullable=True))
    op.execute("""
        INSERT INTO branches (id, name)
        SELECT DISTINCT branch_id, 'Temporary Branch'
        FROM users
        WHERE branch_id IS NOT NULL
        AND branch_id NOT IN (SELECT id FROM branches);
    """)
    op.create_foreign_key(None, 'users', 'branches', ['branch_id'], ['id'])
    op.execute("""
        UPDATE users
        SET branch_id = NULL
        WHERE branch_id IN (
            SELECT id FROM branches WHERE name = 'Temporary Branch'
        );
    """)

    op.execute("""
        DELETE FROM branches WHERE name = 'Temporary Branch';
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'branch_id')
    op.drop_table('branches')
    # ### end Alembic commands ###
